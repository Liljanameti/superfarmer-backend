# Generated by Django 2.0.3 on 2018-10-14 11:39

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('inventory_item_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('inventory_product_quantity', models.FloatField()),
                ('inventory_item_create_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('inventory_item_update_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('inventory_available_from_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('item_picture', models.CharField(max_length=124)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryGroundnutAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groundnut_variety_name', models.CharField(max_length=24, unique=True)),
                ('inventory_item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Inventory')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItemAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_part1', models.CharField(max_length=126)),
                ('address_part2', models.CharField(max_length=126)),
                ('city', models.CharField(max_length=64)),
                ('state', models.CharField(max_length=64)),
                ('country', models.CharField(default='India', max_length=64)),
                ('postal_code', models.CharField(max_length=18)),
                ('latitude', models.FloatField(max_length=18)),
                ('longitude', models.FloatField(max_length=18)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Inventory')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItemStatus',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=16, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=64, unique=True)),
                ('product_default_image', models.CharField(max_length=124)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductMeasuringUnit',
            fields=[
                ('measuring_unit_id', models.AutoField(primary_key=True, serialize=False)),
                ('base_measuring_unit', models.CharField(max_length=32, unique=True)),
                ('measuring_unit', models.CharField(max_length=32, unique=True)),
                ('multiplier', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Transporter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='UserCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserContactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_part1', models.CharField(max_length=126)),
                ('address_part2', models.CharField(max_length=126)),
                ('city', models.CharField(max_length=64)),
                ('state', models.CharField(max_length=64)),
                ('country', models.CharField(default='India', max_length=64)),
                ('postal_code', models.CharField(max_length=18)),
                ('latitude', models.FloatField(max_length=32)),
                ('longitude', models.FloatField(max_length=32)),
                ('phone_primary', models.CharField(max_length=32, unique=True)),
                ('phone_secondary', models.CharField(max_length=18)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('email_address', models.EmailField(max_length=254, unique=True)),
                ('phone_verified', models.BooleanField(default='No')),
                ('email_verified', models.BooleanField(default='No')),
                ('member_since', models.DateTimeField(default=django.utils.timezone.now)),
                ('about_me', models.CharField(max_length=512)),
                ('google_user_id', models.CharField(blank=True, max_length=124, null=True)),
                ('fb_user_id', models.CharField(blank=True, max_length=124, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='users',
            name='user_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.UserStatus'),
        ),
        migrations.AddField(
            model_name='usercontactinfo',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Users'),
        ),
        migrations.AddField(
            model_name='transporter',
            name='transporter_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Users'),
        ),
        migrations.AddField(
            model_name='transporter',
            name='transports',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Product'),
        ),
        migrations.AddField(
            model_name='seller',
            name='seller_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Users'),
        ),
        migrations.AddField(
            model_name='seller',
            name='sells',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Product'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.ProductCategory'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='inventory_item_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.InventoryItemStatus'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_product_name', to='backend.Product'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='product_measuring_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.ProductMeasuringUnit'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Seller'),
        ),
        migrations.AddField(
            model_name='buyer',
            name='buyer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Users'),
        ),
        migrations.AddField(
            model_name='buyer',
            name='buys',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Product'),
        ),
        migrations.AlterUniqueTogether(
            name='transporter',
            unique_together={('transporter_id', 'transports')},
        ),
        migrations.AlterUniqueTogether(
            name='seller',
            unique_together={('seller_id', 'sells')},
        ),
        migrations.AlterUniqueTogether(
            name='buyer',
            unique_together={('buyer_id', 'buys')},
        ),
    ]
